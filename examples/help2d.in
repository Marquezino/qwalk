
Help file for 2D simulations
----------------------------

That's an input file for the simulator of quantum walks. The simulator
ignore all the text before the 'BEGIN' keyword (without quotes), and
reads until it finds an 'END' keyword. The possible keywords in this
version are:

  AFTERMEASURE: defines the number of steps that will be simulated after
     the result of the measurement is one of the detectors, that is, the
     number of steps after a non-trivial measurement.
     Default: 0

  BLPERMANENT: defines that the simulation will use permament broken links.
     This option requires the definition of the broken links in a separate 
     section of the file.
     Default: no broken link

  BLPROB: defines the probability of broken links in perpendicular directions:
     in the secondary and in the main diagonal when the diagonal lattice is
     selected; in the horizontal and in the vertical directions when the natural
     lattice is selected.
     Default: p0 = p1 = 0.0

  CHECK: can be STATEPROB, YSYMMETRY, XSYMMETRY.
     STATEPROB makes the simulator test in each step if the probability 
     of finding the particle in the lattice equals one.
     YSYMMETRY makes the simulator test the symmetry of the probability 
     matrix around the y axis in each step, i.e., the simulator tests
     if the probabilities at the sites y<0 are equal to the probabilities
     at the sites y>0. Analogously to XSYMMETRY. If at some step the
     matrix is not symmetrical, the simulation is aborted. Therefore,
     if you know a priori that the wave-equation should be symmetrical, 
     you can use this option to be safer about the result.
     Default: no check

  COIN: can be CUSTOM, FOURIER, GROVER or HADAMARD
     CUSTOM requires the definition of the coin in a separate section.
     Default: HADAMARD

  DETECTORS: defines the number of detectors and their position. The first
     integer passed after this keyword is the number of detectors in the
     simulation. For each detector other two integers must be provided,
     defining the position of the detectors. For instance, if we want to
     define detectors on points (20,30), (-10,15) and (-40,-40) we say 
                        DETECTORS 3 20 30 -10 15 -40 -40
     Default: no detectors

  DTPROB: defines the probability of random measurements in the simulation, i.e., 
     in each simulation step each site has this probability of being measured.
     Default: 0.0


  EXPERIMENTS: defines the number of experiments that will be carried out.
     The results are the average of the experiments.
     Default: 1

  LATTEXTRA: defines an extra space to be reserved for the lattice, in order
     to avoid that the simulator access invalid regions of memory. It
     is usually safe to leave this options with its default value. On
     the other hand, this options would be important, for instance, if
     the initial condition was not entirely localized in (0,0). If the 
     keywords STEPS and LATTSIZE are also used, LATTEXTRA must come
     first.
     Default: 1

  LATTSIZE: defines the size of the lattice. We consider that the lattice
     coordinates range from -max to max in both axes, where max is the
     integer value passed after LATTSIZE keyword. If the keywords STEPS or
     LATTEXTRA are also used, LATTSIZE must come after them.
     Default: 100

  LATTYPE: defines the type of lattice. Can be NATURAL, DIAGONAL or CYCLE.
     Default: NATURAL

  MIXTIME: declares that the mixing time is to be calculated at the beginning
     of the simulation, with a certain number of steps (this number must be
     passed after the MIXTIME keyword as an integer greater of equal than
     the number of steps simulated).

  SCREEN: defines an observation screen. After the keyword the user should 
     enter four integers, say xa, ya, xb and yb, meaning that the 
     screen detector must be placed from point (xa,ya) to point (xb,yb).
     In this version, the screen can only be placed in horizontal, 
     vertical or in 45 degrees.
     Default: no screen

  SEED: sets the seed of random number generator manually. This is useful
     if we want to repeat a random experiment and obtain exactly the same
     results (in order to generate the same plot again, for instance).
     The user should usually leave this option with its default value.
     Default: taken from the system clock.

  STATE: can be CUSTOM, FOURIER, GROVER or HADAMARD
     FOURIER defines the initial state which gives maximum spread with
     Fourier coin. Analogously to GROVER and HADAMARD. CUSTOM requires
     the definition of the state in a separate section.
     Default: HADAMARD

  STEPS: defines the number of iterations to simulate. If keywords LATTEXTRA
     and LATTSIZE are also used, STEPS must come after LATTEXTRA and
     before LATTSIZE.
     Default: 100

We see below an example of how these keywords can be used. Note, however, 
that in many useful simulations you will not need to provide all those 
keywords.

BEGIN
COIN CUSTOM
STATE CUSTOM
LATTEXTRA 1
STEPS 2000
MIXTIME 5000
LATTSIZE 100
EXPERIMENTS 5
LATTYPE DIAGONAL
BLPROB 0.00 0.01
DTPROB 0.01
SCREEN 60 -100 60 100
DETECTORS 2 10 6 10 -6
AFTERMEASURE 80
CHECK STATEPROB
BLPERMANENT
SEED 1179088303
END

If we choose a CUSTOM coin, we must specify that matrix by using the
keywords 'BEGINCOIN' and 'ENDCOIN' (without quotes). Inside this 
environment we give each entry of the matrix, starting with the first
line and going from left to right. We must give first the real part of
the entry and then the imaginary part, separated by a blank. Although
we could provide the whole matrix in a single line, it may be easier to
read if we give each entry of the matrix in different lines of the input 
file.

BEGINCOIN
 0.5  0.0
 0.5  0.0
 0.5  0.0
 0.5  0.0

 0.5  0.0
-0.5  0.0
 0.5  0.0
-0.5  0.0

 0.5  0.0
 0.5  0.0
-0.5  0.0
-0.5  0.0

 0.5  0.0
-0.5  0.0
-0.5  0.0
 0.5  0.0
ENDCOIN


If we choose a CUSTOM state, we must specify that state by using the
keywords 'BEGINSTATE' and 'ENDSTATE' (without quotes). Inside this
environment we give each non-zero amplitude of the state. The first
two integers represent the coin. The next two integers represent the 
position of the walker. The next two real numbers represent the
amplitude (real and imaginary parts).  Although we could provide the
whole state in a single line, it is better for visualisation if we 
give each non-zero entry of the state in different lines of the input
file.

BEGINSTATE
0 0 0 0  0.5  0.0
0 1 0 0  0.0  0.5
1 0 0 0  0.0  0.5
1 1 0 0 -0.5  0.0
ENDSTATE

If we use the BLPERMANENT keyword we must enter the broken links using
the keywords 'BEGINBL' and 'ENDBL'. Inside this environment there are 
two possible keywords: POINT and LINE. The POINT keyword is followed
by two integers, say xi and yi, meaning that the point (xi,yi) is
to be isolated. The LINE keyword is similar, but it is followed by
four integers, say xi, yi, xf and xf (in this order), meaning that all
the points on the line that goes from (xi,yi) to (xf,yf) are to be 
isolated.

BEGINBL
LINE 10 10 10 7
LINE 10 5 10 -5
LINE 10 -7 10 -10
LINE -10 -10 -10 10
LINE -10 10 10 10
LINE -10 -10 10 -10
POINT 10 -6
ENDBL

